version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: prompt_lab_postgres_prod
    environment:
      POSTGRES_DB: prompt_lab
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./seed_data.sql:/docker-entrypoint-initdb.d/02-seed_data.sql:ro
    ports:
      - "5433:5432"
    networks:
      - prompt_lab_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d prompt_lab"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Application
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: prompt_lab_api_prod
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/prompt_lab
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-here-change-in-production}
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=360
      - JWT_REFRESH_TOKEN_EXPIRE_DAYS=7
      - APP_NAME=Prompt Lab API
      - APP_VERSION=1.0.0
      - DEBUG=false
      - LOG_LEVEL=INFO
      - HOST=0.0.0.0
      - PORT=8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - prompt_lab_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: prompt_lab_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - prompt_lab_network
    restart: unless-stopped

volumes:
  postgres_data_prod:
    driver: local

networks:
  prompt_lab_network:
    driver: bridge
